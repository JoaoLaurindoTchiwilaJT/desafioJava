/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import Entity.Task;
import Repository.TaskManager;
import java.awt.Color;
import java.awt.HeadlessException;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import util.Processo;

/**
 *
 * @author Tchiwila
 */
public class GerenciadorDeTarefa extends javax.swing.JFrame {

    /**
     * Creates new form GerenciadorDeTarefa
     */
    public GerenciadorDeTarefa() {
        initComponents();
        Menu.setVisible(false);
        Vizualizar.setVisible(false);
        Cadastrar.setVisible(false);
        Progress();
        tarefa = (DefaultTableModel) Tarefas.getModel();
    }
    
        Task tasks = new Task();
        TaskManager manager = new TaskManager();
        List<Task> listaDeTarefas = manager.getListTask();
        DefaultTableModel tarefa ; 
        int eixoX=0, eixoY=0;
        Processo alteracoes = new Processo();
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Principal = new javax.swing.JPanel();
        Iniciar = new javax.swing.JPanel();
        Progresso = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        Menu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        Vizualizar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tarefas = new javax.swing.JTable();
        Nova_Tarefa = new javax.swing.JButton();
        pesquisar_status = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        Pesquisando = new javax.swing.JTextField();
        Eliminar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Actualizar = new javax.swing.JButton();
        Cadastrar = new javax.swing.JPanel();
        New_Task = new javax.swing.JLabel();
        Titulo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Date_finish = new com.toedter.calendar.JDateChooser();
        Status = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Descricao = new javax.swing.JScrollPane();
        Description = new javax.swing.JTextArea();
        Voltar = new javax.swing.JButton();
        Confirmar = new javax.swing.JButton();
        id = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Principal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Iniciar.setBackground(new java.awt.Color(0, 153, 204));
        Iniciar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                IniciarMouseDragged(evt);
            }
        });
        Iniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IniciarMousePressed(evt);
            }
        });

        Progresso.setBackground(new java.awt.Color(0, 51, 255));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 70)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SGT");

        javax.swing.GroupLayout IniciarLayout = new javax.swing.GroupLayout(Iniciar);
        Iniciar.setLayout(IniciarLayout);
        IniciarLayout.setHorizontalGroup(
            IniciarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IniciarLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(Progresso, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        IniciarLayout.setVerticalGroup(
            IniciarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IniciarLayout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                .addComponent(Progresso, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );

        Principal.add(Iniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 610));

        Menu.setBackground(new java.awt.Color(0, 153, 204));
        Menu.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                MenuMouseDragged(evt);
            }
        });
        Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuMousePressed(evt);
            }
        });
        Menu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gestor de Tarefas");
        Menu.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 12, -1, -1));

        close.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        close.setForeground(new java.awt.Color(204, 0, 51));
        close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close.setText("X");
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        Menu.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(734, 0, 60, 40));

        Principal.add(Menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(-8, 0, 800, 50));

        Vizualizar.setBackground(new java.awt.Color(255, 255, 255));
        Vizualizar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Tarefas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Titulo", "Descrição", "Data de Criação", "Data de Conclusão", "Status"
            }
        ));
        Tarefas.setFocusable(false);
        jScrollPane1.setViewportView(Tarefas);

        Nova_Tarefa.setText("Nova Tarefa");
        Nova_Tarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nova_TarefaActionPerformed(evt);
            }
        });

        pesquisar_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "PENDENTE", "EM_PROGRESSO", "CONCLUIDA" }));
        pesquisar_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisar_statusActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 255));
        jLabel2.setText("Status");

        Pesquisando.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PesquisandoKeyReleased(evt);
            }
        });

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 255));
        jLabel4.setText("Pesquisar");

        Actualizar.setText("Actualizar");
        Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VizualizarLayout = new javax.swing.GroupLayout(Vizualizar);
        Vizualizar.setLayout(VizualizarLayout);
        VizualizarLayout.setHorizontalGroup(
            VizualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VizualizarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Nova_Tarefa, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(VizualizarLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(VizualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Pesquisando, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(VizualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VizualizarLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(VizualizarLayout.createSequentialGroup()
                        .addComponent(pesquisar_status, 0, 357, Short.MAX_VALUE)
                        .addGap(23, 23, 23))))
        );
        VizualizarLayout.setVerticalGroup(
            VizualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VizualizarLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(VizualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VizualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pesquisar_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pesquisando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(VizualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nova_Tarefa)
                    .addComponent(Eliminar)
                    .addComponent(Actualizar))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        Principal.add(Vizualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 790, 570));

        Cadastrar.setBackground(new java.awt.Color(255, 255, 255));
        Cadastrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Cadastrar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                CadastrarMouseDragged(evt);
            }
        });
        Cadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CadastrarMousePressed(evt);
            }
        });
        Cadastrar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        New_Task.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        New_Task.setForeground(new java.awt.Color(0, 51, 204));
        New_Task.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        New_Task.setText("New Task");
        Cadastrar.add(New_Task, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 16, 790, -1));

        Titulo.setForeground(new java.awt.Color(0, 102, 255));
        Titulo.setText("Titulo");
        Titulo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        Titulo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TituloFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TituloFocusLost(evt);
            }
        });
        Cadastrar.add(Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 350, 30));

        jLabel6.setForeground(new java.awt.Color(0, 51, 255));
        jLabel6.setText("Status");
        Cadastrar.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, -1, -1));

        Date_finish.setBackground(new java.awt.Color(255, 255, 255));
        Date_finish.setForeground(new java.awt.Color(255, 255, 255));
        Cadastrar.add(Date_finish, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 350, -1));

        Status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PENDENTE", "EM_PROGRESSO", "CONCLUIDO" }));
        Cadastrar.add(Status, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 350, -1));

        jLabel7.setForeground(new java.awt.Color(0, 51, 255));
        jLabel7.setText("Descrição");
        Cadastrar.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, -1, -1));

        jLabel8.setForeground(new java.awt.Color(0, 51, 255));
        jLabel8.setText("Data de Conclusão");
        Cadastrar.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, -1, -1));

        Description.setColumns(20);
        Description.setRows(5);
        Descricao.setViewportView(Description);

        Cadastrar.add(Descricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 350, 70));

        Voltar.setText("Voltar");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });
        Cadastrar.add(Voltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 470, 150, 30));

        Confirmar.setText("Confirmar");
        Confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarActionPerformed(evt);
            }
        });
        Cadastrar.add(Confirmar, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 473, 150, 30));
        Cadastrar.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 350, -1));

        Principal.add(Cadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 790, 570));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Principal, javax.swing.GroupLayout.PREFERRED_SIZE, 786, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Principal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void IniciarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IniciarMouseDragged
        // TODO add your handling code here:
        setLocation( evt.getXOnScreen() - eixoX,evt.getYOnScreen() - eixoY);
        
    }//GEN-LAST:event_IniciarMouseDragged

    private void IniciarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IniciarMousePressed
        // TODO add your handling code here:
        eixoX = evt.getX();
        eixoY = evt.getY();
    }//GEN-LAST:event_IniciarMousePressed

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        // TODO add your handling code here:
      dispose();
    }//GEN-LAST:event_closeMouseClicked

    private void MenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuMousePressed
        // TODO add your handling code here:
        eixoX = evt.getX();
        eixoY = evt.getY();
        
    }//GEN-LAST:event_MenuMousePressed

    private void MenuMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuMouseDragged
        // TODO add your handling code here:
        setLocation(evt.getXOnScreen()-eixoX,evt.getYOnScreen()-eixoY);
    }//GEN-LAST:event_MenuMouseDragged

    private void TituloFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TituloFocusGained
        // TODO add your handling code here:
         if (Titulo.getText().equals("Titulo")) {
                    Titulo.setText("");
                    Titulo.setForeground(new Color(0, 102, 255));
                }
    }//GEN-LAST:event_TituloFocusGained

    private void TituloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TituloFocusLost
        // TODO add your handling code here:
          if (Titulo.getText().isEmpty()) {
                    Titulo.setText("Titulo");
                    Titulo.setForeground(new Color(0, 102, 255));
                }
    }//GEN-LAST:event_TituloFocusLost

    private void Nova_TarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nova_TarefaActionPerformed
        // TODO add your handling code here:
        Titulo.setText("");
        Description.setText("");
        Date_finish.setDate(new Date());
        Cadastrar.setVisible(true);
        Vizualizar.setVisible(false);
    }//GEN-LAST:event_Nova_TarefaActionPerformed

    private void CadastrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CadastrarMousePressed
        // TODO add your handling code here:
        eixoX = evt.getX();
        eixoY = evt.getY();
        
    }//GEN-LAST:event_CadastrarMousePressed

    private void CadastrarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CadastrarMouseDragged
        // TODO add your handling code here:
        setLocation(evt.getXOnScreen() - eixoX,evt.getYOnScreen() - eixoY);
    }//GEN-LAST:event_CadastrarMouseDragged

    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        // TODO add your handling code here:
        Cadastrar.setVisible(false);
        tarefa.setNumRows(0);
        PreencherTabela();
        Vizualizar.setVisible(true);
        
    }//GEN-LAST:event_VoltarActionPerformed

    private void ConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarActionPerformed
       
        try {
              // Converte para Instant
              Instant instant = Date_finish.getDate().toInstant();
              LocalDate localDate = instant.atZone(ZoneId.systemDefault()).toLocalDate();

              String statusSelecionado = Status.getSelectedItem().toString().toUpperCase();
              boolean validete = tasks.validation(Titulo.getText(), Description.getText(), LocalDate.now(), localDate, Task.TaskStatus.PENDENTE);
                if (Confirmar.getText().equalsIgnoreCase("Confirmar") && validete == true) {
                    
                    tasks.setTitulo(Titulo.getText());
                    tasks.setDataCriacao(LocalDate.now());
                    tasks.setDataConclusao(localDate);
                    tasks.setStatus(Task.TaskStatus.valueOf(statusSelecionado));
                    tasks.setDescricao(Description.getText());
                    manager.addTask(tasks); // Adiciona a nova tarefa
                    
                } else if(Confirmar.getText().equalsIgnoreCase("Actualizar") && validete == true) {
                    
                    tasks.setId(UUID.fromString(alteracoes.ConvertUUID(id.getText())));
                    tasks.setTitulo(Titulo.getText());
                    tasks.setDataCriacao(LocalDate.now());
                    tasks.setDataConclusao(localDate);
                    tasks.setStatus(Task.TaskStatus.valueOf(statusSelecionado));
                    tasks.setDescricao(Description.getText());
                    manager.updateTask(tasks); // Actualizar tarefa
                    
                }

                Cadastrar.setVisible(false);

                // Limpar a tabela se necessário (opcional)
                tarefa.setNumRows(0);
                listaDeTarefas = manager.getListTask();
                // Recarregar os dados na tabela chamando o método responsável
                PreencherTabela();

                // Notificar o modelo da tabela para atualizar a exibição
                ((AbstractTableModel) Tarefas.getModel()).fireTableDataChanged();

                // Revalidar e repintar a tabela para garantir atualização visual
                Tarefas.revalidate();
                Tarefas.repaint();

                Vizualizar.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      

        
    }//GEN-LAST:event_ConfirmarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
      Object firstElement = null;
            try {
                int resposta = JOptionPane.showConfirmDialog(null, "Você deseja continuar?", "Confirmação", JOptionPane.YES_NO_OPTION);

                if (resposta == JOptionPane.YES_OPTION) {
                    int selectedRow = Tarefas.getSelectedRow(); // Obtém a linha selecionada
                    firstElement = Tarefas.getValueAt(selectedRow, 0); // Pega o valor da primeira coluna da linha selecionada

                    // Verifica se o elemento é do tipo UUID e o converte para String
                    UUID id;
                    if (firstElement instanceof UUID) {
                        id = (UUID) firstElement;
                    } else {
                        id = UUID.fromString((String) firstElement); // Converte para UUID caso seja String
                    }

                    tarefa.removeRow(selectedRow); // Remove a linha da tabela
                  //  System.out.println("Primeiro elemento (UUID): " + id);

                    manager.deleteTask(id); // Chama o método delete com o UUID
                }
            } catch (HeadlessException e) {
                JOptionPane.showMessageDialog(null, "Nenhuma linha selecionada. Clique na linha que deseja eliminar os dados. Erro: " + e);
            }

       
    }//GEN-LAST:event_EliminarActionPerformed

    private void PesquisandoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PesquisandoKeyReleased
        // TODO add your handling code here:
        try {
            // Obtém o texto do campo de pesquisa
             String pesquisa = Pesquisando.getText();

            // Cria um filtro com base no texto de pesquisa
            TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(tarefa);
            Tarefas.setRowSorter(sorter);

            if (pesquisa.trim().isEmpty()) {
                sorter.setRowFilter(null);  // Exibe todas as linhas se o campo de pesquisa estiver vazio
            } else {
                // Adiciona (?i) ao início da expressão para ignorar o caso (case-insensitive)
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + pesquisa));  // Filtra as linhas com base no texto inserido
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
         

    }//GEN-LAST:event_PesquisandoKeyReleased

    private void ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarActionPerformed
        // TODO add your handling code here:
       try {
            int selectedRow = Tarefas.getSelectedRow();
            if (selectedRow == -1) { // Verifica se nenhuma linha foi selecionada
                JOptionPane.showMessageDialog(null, "Nenhuma linha selecionada");
                return; // Sai do bloco try se não houver linha selecionada
            }
            
                Object cellValue = Tarefas.getValueAt(selectedRow, 0);
                if (cellValue instanceof UUID) {
                    id.setText(cellValue.toString());
                } else if (cellValue instanceof String string) {
                    id.setText(string);
                } else {
                    id.setText(""); // Defina um valor padrão caso o tipo não seja esperado
                }

            
                New_Task.setText("Actualiza Task");
                Confirmar.setText("Actualizar");
                id.setVisible(false);
                Cadastrar.setVisible(true);
                Vizualizar.setVisible(false);
                Titulo.setText((String) Tarefas.getValueAt(selectedRow, 1));
                Description.setText((String) Tarefas.getValueAt(selectedRow, 2));
               
                
                Status.removeAllItems();
                 List<String> dados = alteracoes.StatusCombo((String) Tarefas.getValueAt(selectedRow, 5));
              
                 for (int i = 0; i < dados.size(); i++) {
                            Status.addItem(dados.get(i));
               
                  }
                 
                // Obter o valor da célula da tabela, que é um LocalDate
                LocalDate localDate = (LocalDate) Tarefas.getValueAt(selectedRow, 4);
                // Convertendo LocalDate para java.util.Date
                Date date = Date.from(localDate.atStartOfDay(ZoneId.systemDefault()).toInstant());
                // Agora você pode usar setDate para definir a data no JDateChooser
                Date_finish.setDate(date);
                
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao selecionar linha: " + e.getMessage());
        }

        
    }//GEN-LAST:event_ActualizarActionPerformed

    private void pesquisar_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisar_statusActionPerformed
        // TODO add your handling code here:
        try {
            
                 Task.TaskStatus status = Task.TaskStatus.valueOf(pesquisar_status.getSelectedItem().toString());
                // Limpar a tabela se necessário (opcional)
                tarefa.setNumRows(0);
                listaDeTarefas = manager.getListTaskForStatus(status);
                // Recarregar os dados na tabela chamando o método responsável
                PreencherTabela();
                
                
        } catch (Exception e) {
            listaDeTarefas = manager.getListTask();
            PreencherTabela();
        }
        
    }//GEN-LAST:event_pesquisar_statusActionPerformed

    private void Progress(){
          new Thread(() -> {
            for (int i = 0; i <= 100; i++) {
                Progresso.setValue(i);
                Progresso.setStringPainted(true);
                try {
                    Thread.sleep(50);
                } catch (InterruptedException e) {
                }
                
                if (i == 100) {
                    
                    Iniciar.setVisible(false);
                    Vizualizar.setVisible(true);
                    PreencherTabela();
                    Menu.setVisible(true);
                    
                    
                }
            }
        }).start();
          
    }
    
    private void PreencherTabela(){
             
                    // Iterar sobre a lista de tarefas e adicionar os dados na tabela
        try {
            tarefa.setNumRows(0);
                    
             for (Task task : listaDeTarefas) {
                         // Criar um array com os dados da tarefa
                         
                Object[] dados = { 
                    task.getId(), 
                    task.getTitulo(), 
                    task.getDescricao(), 
                    task.getDataCriacao(), 
                    task.getDataConclusao(), 
                    task.getStatus()
                };

                // Adicionar a linha à tabela
                tarefa.addRow(dados);
             }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Banco de dados não existe");
        }
             
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciadorDeTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciadorDeTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciadorDeTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciadorDeTarefa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GerenciadorDeTarefa().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Actualizar;
    private javax.swing.JPanel Cadastrar;
    private javax.swing.JButton Confirmar;
    private com.toedter.calendar.JDateChooser Date_finish;
    private javax.swing.JScrollPane Descricao;
    private javax.swing.JTextArea Description;
    private javax.swing.JButton Eliminar;
    private javax.swing.JPanel Iniciar;
    private javax.swing.JPanel Menu;
    private javax.swing.JLabel New_Task;
    private javax.swing.JButton Nova_Tarefa;
    private javax.swing.JTextField Pesquisando;
    private javax.swing.JPanel Principal;
    private javax.swing.JProgressBar Progresso;
    private javax.swing.JComboBox<String> Status;
    private javax.swing.JTable Tarefas;
    private javax.swing.JTextField Titulo;
    private javax.swing.JPanel Vizualizar;
    private javax.swing.JButton Voltar;
    private javax.swing.JLabel close;
    private javax.swing.JLabel id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> pesquisar_status;
    // End of variables declaration//GEN-END:variables
}
